default:
    image: 'cimg/node:22.13.0-browsers'

include:
    - project: 'ci-cd/templates'
      ref: master
      file: '/prodsec/.oss-scan.yml'

cache:
    key:
        files:
            - package-lock.json
    paths:
        - './node_modules'
        - './packages/*/node_modules'

stages:
    - setup
    - build
    - test
    - release

npm_install:
    stage: setup
    script:
        - npm ci --include=dev

check_version:
    stage: build
    script:
        - npm run version:check

check_tag:
    stage: build
    only:
        - /^v.*/
    script:
        - npm run tag:check

lint:
    stage: build
    script:
        - npm run lint
        - npm run lint:markdown

build:
    stage: build
    only:
        - /^[^v].*/
    artifacts:
        paths:
            - packages/*/dist/
    script:
        - npm run compile

build_artifacts:
    stage: build
    only:
        - /^v\d+\.\d+\.\d+(-[a-zA-Z]+\.1)?$/
    artifacts:
        paths:
            - artifacts/
    script:
        - if [ ! -d "artifacts" ]; then mkdir artifacts; fi
        - npm run compile
        - npm pack --pack-destination artifacts --workspace packages/session-recorder --workspace packages/web

        # complete artifacts & checksums
        - cp packages/*/dist/artifacts/* artifacts/
        - shasum -a 256 artifacts/* > artifacts/checksums.txt

unit_test:
    stage: test
    script:
        - npm ci --include=dev
        - npx playwright install --with-deps
        - npm run test:unit -- --browser.name chromium

oss-scan:
    stage: test
    extends: .oss-scan

release_npm:
    artifacts:
        paths:
            - artifacts/
    stage: release
    only:
        - /^v\d+\.\d+\.\d+(-[a-zA-Z]+\.\d)?$/
    script:
        - echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc
        - |
            tag_flag=""
            if [[ "$CI_COMMIT_TAG" =~ -([a-zA-Z]+)\.\d$ ]]; then
              tag_name="${BASH_REMATCH[1]}"
              tag_flag="--tag $tag_name"
              echo "Publishing with tag: $tag_name"
            else
              echo "No tag suffix found, publishing without tag"
            fi

            for f in artifacts/*.tgz; do
              npm publish --dry-run $tag_flag "./$f"
            done
        - rm -f ~/.npmrc

release_github:
    artifacts:
        paths:
            - artifacts/
    stage: release
    only:
        - /^v\d+\.\d+\.\d+(-[a-zA-Z]+\.\d)?$/
    script:
        - sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key 23F3D4EA75716059
        - echo "deb [arch=$(dpkg --print-architecture)] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        - sudo apt update
        - sudo apt install gh
        - |
            prerelease_flag=""
            if [[ "$CI_COMMIT_REF_NAME" == *"-beta"* ]]; then
              prerelease_flag="--prerelease"
            fi
            gh release create v${CI_COMMIT_REF_NAME:1} ./artifacts/* --target $CI_COMMIT_SHA --repo $GITHUB_REPOSITORY $prerelease_flag

release_cdn:
    artifacts:
        paths:
            - artifacts/
    stage: release
    only:
        - /^(v\d+\.\d+\.\d+(-[a-zA-Z]+\.\d)?|main)$/
    needs:
        - job: release_github
          optional: true
    id_tokens:
        CI_JOB_JWT:
            aud: $CICD_VAULT_ADDR
    script:
        - npm ci --include=dev
        # authenticate and release to CDN
        # - creds-helper init && eval $(creds-helper aws --eval aws:v1/o11y-infra/role/o11y_gdi_otel_js_web_releaser_role)
        - tsx scripts/release-cdn.mts v${CI_COMMIT_REF_NAME:1} --dry-run
